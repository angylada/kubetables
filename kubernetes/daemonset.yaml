apiVersion: v1
kind: Namespace
metadata:
  name: ktban

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ktban
  namespace: ktban

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ktban
  namespace: ktban
rules:
  - apiGroups: ["k8s.sers.dev"]
    resources: ["ktbans"]
    verbs: ["get", "watch", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ktban
  namespace: ktban
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ktban
subjects:
  - kind: ServiceAccount
    name: ktban
    namespace: ktban

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kubetables
  namespace: ktban
  labels:
    app: kubetables
spec:
  selector:
    matchLabels:
      app: kubetables
  template:
    metadata:
      labels:
        app: kubetables
    spec:
      hostNetwork: true
      serviceAccountName: ktban
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      containers:
      - image: ghcr.io/sers-dev/kubetables:master
        name: kubetables
        securityContext:
          capabilities:
            add: [ "NET_ADMIN" ]
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
